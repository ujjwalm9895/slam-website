2025-07-27 12:31:14,501 - __main__ - INFO - Starting development server...
2025-07-27 12:31:24,087 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 12:31:24,136 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-07-27 12:31:24,238 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:31:24,337 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("farmers")
2025-07-27 12:31:24,338 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:31:24,341 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("experts")
2025-07-27 12:31:24,342 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:31:24,344 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("dealers")
2025-07-27 12:31:24,353 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:31:24,356 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("products")
2025-07-27 12:31:24,358 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:31:24,364 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("orders")
2025-07-27 12:31:24,371 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:31:24,373 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("appointments")
2025-07-27 12:31:24,374 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:31:24,376 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("reviews")
2025-07-27 12:31:24,377 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:31:24,388 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-07-27 12:39:28,700 - __main__ - INFO - Starting development server...
2025-07-27 12:39:33,902 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 12:39:33,903 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-07-27 12:39:33,904 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:39:33,907 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("farmers")
2025-07-27 12:39:33,909 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:39:33,911 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("experts")
2025-07-27 12:39:33,912 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:39:33,916 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("dealers")
2025-07-27 12:39:33,917 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:39:33,920 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("products")
2025-07-27 12:39:33,921 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:39:33,924 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("orders")
2025-07-27 12:39:33,925 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:39:33,927 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("appointments")
2025-07-27 12:39:33,928 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:39:33,930 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("reviews")
2025-07-27 12:39:33,931 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:39:33,935 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-07-27 12:39:53,771 - main - ERROR - Validation Error: [{'type': 'enum', 'loc': ('query', 'category'), 'msg': "Input should be 'drones', 'tractors', 'robots', 'seeds', 'fertilizers' or 'machinery'", 'input': 'Seeds', 'ctx': {'expected': "'drones', 'tractors', 'robots', 'seeds', 'fertilizers' or 'machinery'"}}]
2025-07-27 12:39:53,829 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 12:39:53,978 - sqlalchemy.engine.Engine - INFO - SELECT experts.email, experts.phone, experts.name, experts.country, experts.is_active, experts.is_verified, experts.id, experts.user_id, experts.specialization, experts.qualification, experts.experience_years, experts.consultation_fee, experts.rating, experts.total_consultations 
FROM experts 
WHERE experts.is_active = 1
2025-07-27 12:39:53,995 - sqlalchemy.engine.Engine - INFO - [generated in 0.01739s] ()
2025-07-27 12:39:54,027 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 12:39:54,074 - sqlalchemy.engine.Engine - INFO - SELECT farmers.email, farmers.phone, farmers.name, farmers.country, farmers.is_active, farmers.is_verified, farmers.id, farmers.user_id, farmers.farm_size, farmers.crop_types, farmers.experience_years, farmers.location, farmers.bio, farmers.rating, farmers.total_orders 
FROM farmers 
WHERE farmers.is_active = 1
2025-07-27 12:39:54,142 - sqlalchemy.engine.Engine - INFO - [generated in 0.06828s] ()
2025-07-27 12:39:54,173 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 12:39:54,199 - sqlalchemy.engine.Engine - INFO - SELECT products.id, products.name, products.description, products.category, products.price, products.dealer_id, products.stock_quantity, products.image_url, products.rating, products.created_at 
FROM products
2025-07-27 12:39:54,244 - sqlalchemy.engine.Engine - INFO - [generated in 0.04496s] ()
2025-07-27 12:39:54,259 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 12:39:54,276 - sqlalchemy.engine.Engine - INFO - SELECT dealers.email, dealers.phone, dealers.name, dealers.country, dealers.is_active, dealers.is_verified, dealers.id, dealers.user_id, dealers.company_name, dealers.business_type, dealers.products_offered, dealers.rating, dealers.total_sales 
FROM dealers 
WHERE dealers.is_active = 1
2025-07-27 12:39:54,289 - sqlalchemy.engine.Engine - INFO - [generated in 0.01236s] ()
2025-07-27 12:39:54,294 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-07-27 12:39:54,297 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-07-27 12:39:54,310 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-07-27 12:39:54,334 - main - ERROR - Unhandled Exception: (sqlite3.OperationalError) no such column: experts.email
[SQL: SELECT experts.email, experts.phone, experts.name, experts.country, experts.is_active, experts.is_verified, experts.id, experts.user_id, experts.specialization, experts.qualification, experts.experience_years, experts.consultation_fee, experts.rating, experts.total_consultations 
FROM experts 
WHERE experts.is_active = 1]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 149, in execute
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 300, in _handle_exception
    raise error
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 131, in execute
    self.await_(_cursor.execute(operation, parameters))
    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 40, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 32, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 105, in run
    result = function()
sqlite3.OperationalError: no such column: experts.email

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\errors.py", line 164, in __call__
    await self.app(scope, receive, _send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 182, in __call__
    with recv_stream, send_stream, collapse_excgroups():
                                   ~~~~~~~~~~~~~~~~~~^^
  File "C:\ProgramData\miniconda3\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_utils.py", line 83, in collapse_excgroups
    raise exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 184, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\main.py", line 135, in log_requests
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 159, in call_next
    raise app_exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 144, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\cors.py", line 93, in __call__
    await self.simple_response(scope, receive, send, request_headers=headers)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\cors.py", line 144, in simple_response
    await self.app(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\trustedhost.py", line 36, in __call__
    await self.app(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\exceptions.py", line 63, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 716, in __call__
    await self.middleware_stack(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 736, in app
    await route.handle(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 290, in handle
    await self.app(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 78, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 75, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\fastapi\routing.py", line 302, in app
    raw_response = await run_endpoint_function(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\fastapi\routing.py", line 213, in run_endpoint_function
    return await dependant.call(**values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\api\experts.py", line 13, in get_experts
    result = await session.execute(
             ^^^^^^^^^^^^^^^^^^^^^^
        select(Expert).where(Expert.is_active == True)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 463, in execute
    result = await greenlet_spawn(
             ^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 201, in greenlet_spawn
    result = context.throw(*sys.exc_info())
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2251, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self,
        ^^^^^
    ...<4 lines>...
        conn,
        ^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\orm\context.py", line 306, in orm_execute_statement
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 149, in execute
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 300, in _handle_exception
    raise error
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 131, in execute
    self.await_(_cursor.execute(operation, parameters))
    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 40, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 32, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 105, in run
    result = function()
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: experts.email
[SQL: SELECT experts.email, experts.phone, experts.name, experts.country, experts.is_active, experts.is_verified, experts.id, experts.user_id, experts.specialization, experts.qualification, experts.experience_years, experts.consultation_fee, experts.rating, experts.total_consultations 
FROM experts 
WHERE experts.is_active = 1]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-27 12:39:55,195 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-07-27 12:39:55,274 - main - ERROR - Unhandled Exception: (sqlite3.OperationalError) no such column: farmers.email
[SQL: SELECT farmers.email, farmers.phone, farmers.name, farmers.country, farmers.is_active, farmers.is_verified, farmers.id, farmers.user_id, farmers.farm_size, farmers.crop_types, farmers.experience_years, farmers.location, farmers.bio, farmers.rating, farmers.total_orders 
FROM farmers 
WHERE farmers.is_active = 1]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 149, in execute
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 300, in _handle_exception
    raise error
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 131, in execute
    self.await_(_cursor.execute(operation, parameters))
    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 40, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 32, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 105, in run
    result = function()
sqlite3.OperationalError: no such column: farmers.email

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\errors.py", line 164, in __call__
    await self.app(scope, receive, _send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 182, in __call__
    with recv_stream, send_stream, collapse_excgroups():
                                   ~~~~~~~~~~~~~~~~~~^^
  File "C:\ProgramData\miniconda3\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_utils.py", line 83, in collapse_excgroups
    raise exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 184, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\main.py", line 135, in log_requests
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 159, in call_next
    raise app_exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 144, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\cors.py", line 93, in __call__
    await self.simple_response(scope, receive, send, request_headers=headers)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\cors.py", line 144, in simple_response
    await self.app(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\trustedhost.py", line 36, in __call__
    await self.app(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\exceptions.py", line 63, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 716, in __call__
    await self.middleware_stack(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 736, in app
    await route.handle(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 290, in handle
    await self.app(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 78, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 75, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\fastapi\routing.py", line 302, in app
    raw_response = await run_endpoint_function(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\fastapi\routing.py", line 213, in run_endpoint_function
    return await dependant.call(**values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\api\farmers.py", line 13, in get_farmers
    result = await session.execute(
             ^^^^^^^^^^^^^^^^^^^^^^
        select(Farmer).where(Farmer.is_active == True)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 463, in execute
    result = await greenlet_spawn(
             ^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 201, in greenlet_spawn
    result = context.throw(*sys.exc_info())
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2251, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self,
        ^^^^^
    ...<4 lines>...
        conn,
        ^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\orm\context.py", line 306, in orm_execute_statement
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 149, in execute
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 300, in _handle_exception
    raise error
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 131, in execute
    self.await_(_cursor.execute(operation, parameters))
    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 40, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 32, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 105, in run
    result = function()
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: farmers.email
[SQL: SELECT farmers.email, farmers.phone, farmers.name, farmers.country, farmers.is_active, farmers.is_verified, farmers.id, farmers.user_id, farmers.farm_size, farmers.crop_types, farmers.experience_years, farmers.location, farmers.bio, farmers.rating, farmers.total_orders 
FROM farmers 
WHERE farmers.is_active = 1]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-27 12:39:55,573 - main - ERROR - Unhandled Exception: (sqlite3.OperationalError) no such column: dealers.email
[SQL: SELECT dealers.email, dealers.phone, dealers.name, dealers.country, dealers.is_active, dealers.is_verified, dealers.id, dealers.user_id, dealers.company_name, dealers.business_type, dealers.products_offered, dealers.rating, dealers.total_sales 
FROM dealers 
WHERE dealers.is_active = 1]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 149, in execute
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 300, in _handle_exception
    raise error
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 131, in execute
    self.await_(_cursor.execute(operation, parameters))
    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 40, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 32, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 105, in run
    result = function()
sqlite3.OperationalError: no such column: dealers.email

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\errors.py", line 164, in __call__
    await self.app(scope, receive, _send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 182, in __call__
    with recv_stream, send_stream, collapse_excgroups():
                                   ~~~~~~~~~~~~~~~~~~^^
  File "C:\ProgramData\miniconda3\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_utils.py", line 83, in collapse_excgroups
    raise exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 184, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\main.py", line 135, in log_requests
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 159, in call_next
    raise app_exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 144, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\cors.py", line 93, in __call__
    await self.simple_response(scope, receive, send, request_headers=headers)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\cors.py", line 144, in simple_response
    await self.app(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\trustedhost.py", line 36, in __call__
    await self.app(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\exceptions.py", line 63, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 716, in __call__
    await self.middleware_stack(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 736, in app
    await route.handle(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 290, in handle
    await self.app(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 78, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 75, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\fastapi\routing.py", line 302, in app
    raw_response = await run_endpoint_function(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\fastapi\routing.py", line 213, in run_endpoint_function
    return await dependant.call(**values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\api\dealers.py", line 12, in get_dealers
    result = await session.execute(
             ^^^^^^^^^^^^^^^^^^^^^^
        select(Dealer).where(Dealer.is_active == True)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 463, in execute
    result = await greenlet_spawn(
             ^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 201, in greenlet_spawn
    result = context.throw(*sys.exc_info())
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2251, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self,
        ^^^^^
    ...<4 lines>...
        conn,
        ^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\orm\context.py", line 306, in orm_execute_statement
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 149, in execute
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 300, in _handle_exception
    raise error
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 131, in execute
    self.await_(_cursor.execute(operation, parameters))
    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 40, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 32, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 105, in run
    result = function()
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: dealers.email
[SQL: SELECT dealers.email, dealers.phone, dealers.name, dealers.country, dealers.is_active, dealers.is_verified, dealers.id, dealers.user_id, dealers.company_name, dealers.business_type, dealers.products_offered, dealers.rating, dealers.total_sales 
FROM dealers 
WHERE dealers.is_active = 1]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-27 12:44:51,908 - __main__ - INFO - Starting development server...
2025-07-27 12:44:54,217 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 12:44:54,220 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-07-27 12:44:54,221 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:44:54,225 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("farmers")
2025-07-27 12:44:54,232 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:44:54,234 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("experts")
2025-07-27 12:44:54,241 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:44:54,244 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("dealers")
2025-07-27 12:44:54,244 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:44:54,247 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("products")
2025-07-27 12:44:54,248 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:44:54,250 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("orders")
2025-07-27 12:44:54,255 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:44:54,260 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("appointments")
2025-07-27 12:44:54,261 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:44:54,263 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("reviews")
2025-07-27 12:44:54,264 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:44:54,267 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-07-27 12:46:04,427 - main - INFO - Starting SLAM Robotics Agriculture Platform API...
2025-07-27 12:46:04,440 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 12:46:04,458 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-07-27 12:46:04,472 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:46:04,479 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("farmers")
2025-07-27 12:46:04,480 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:46:04,488 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("experts")
2025-07-27 12:46:04,512 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:46:04,525 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("dealers")
2025-07-27 12:46:04,526 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:46:04,529 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("products")
2025-07-27 12:46:04,530 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:46:04,535 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("orders")
2025-07-27 12:46:04,540 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:46:04,547 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("appointments")
2025-07-27 12:46:04,558 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:46:04,562 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("reviews")
2025-07-27 12:46:04,572 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:46:04,575 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-07-27 12:46:04,576 - main - INFO - Database initialized successfully
2025-07-27 12:46:09,968 - main - INFO - Shutting down SLAM Robotics Agriculture Platform API...
2025-07-27 12:46:14,051 - main - INFO - Starting SLAM Robotics Agriculture Platform API...
2025-07-27 12:46:14,054 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 12:46:14,055 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-07-27 12:46:14,056 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:46:14,064 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("farmers")
2025-07-27 12:46:14,065 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:46:14,067 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("experts")
2025-07-27 12:46:14,067 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:46:14,069 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("dealers")
2025-07-27 12:46:14,069 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:46:14,071 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("products")
2025-07-27 12:46:14,072 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:46:14,076 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("orders")
2025-07-27 12:46:14,078 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:46:14,082 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("appointments")
2025-07-27 12:46:14,084 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:46:14,086 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("reviews")
2025-07-27 12:46:14,087 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:46:14,092 - sqlalchemy.engine.Engine - INFO - SELECT name FROM sqlite_master WHERE type='table'
2025-07-27 12:46:14,098 - sqlalchemy.engine.Engine - INFO - [generated in 0.00601s] ()
2025-07-27 12:46:14,106 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-07-27 12:46:14,110 - main - INFO - Database initialized successfully
2025-07-27 12:48:24,216 - main - INFO - Shutting down SLAM Robotics Agriculture Platform API...
2025-07-27 12:48:31,290 - __main__ - INFO - Starting development server...
2025-07-27 12:48:54,229 - main - INFO - Starting SLAM Robotics Agriculture Platform API...
2025-07-27 12:48:54,233 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 12:48:54,235 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-07-27 12:48:54,237 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:48:54,241 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("farmers")
2025-07-27 12:48:54,242 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:48:54,244 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("experts")
2025-07-27 12:48:54,244 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:48:54,246 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("dealers")
2025-07-27 12:48:54,246 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:48:54,247 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("products")
2025-07-27 12:48:54,248 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:48:54,251 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("orders")
2025-07-27 12:48:54,252 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:48:54,257 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("appointments")
2025-07-27 12:48:54,258 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:48:54,259 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("reviews")
2025-07-27 12:48:54,260 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:48:54,262 - sqlalchemy.engine.Engine - INFO - SELECT name FROM sqlite_master WHERE type='table'
2025-07-27 12:48:54,263 - sqlalchemy.engine.Engine - INFO - [generated in 0.00071s] ()
2025-07-27 12:48:54,265 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-07-27 12:48:54,268 - main - INFO - Database initialized successfully
2025-07-27 12:52:06,401 - main - INFO - Request: GET http://localhost:8000/api/farmers
2025-07-27 12:52:06,669 - main - INFO - Response: GET http://localhost:8000/api/farmers - 307
2025-07-27 12:52:07,351 - main - INFO - Request: GET http://localhost:8000/api/products?category=Seeds
2025-07-27 12:52:07,414 - main - INFO - Request: GET http://localhost:8000/api/dealers
2025-07-27 12:52:07,498 - main - INFO - Request: GET http://localhost:8000/api/experts
2025-07-27 12:52:07,597 - main - INFO - Request: GET http://localhost:8000/api/products
2025-07-27 12:52:07,715 - main - INFO - Request: GET http://localhost:8000/api/farmers/
2025-07-27 12:52:07,812 - main - INFO - Response: GET http://localhost:8000/api/products?category=Seeds - 307
2025-07-27 12:52:07,899 - main - INFO - Response: GET http://localhost:8000/api/dealers - 307
2025-07-27 12:52:07,999 - main - INFO - Response: GET http://localhost:8000/api/experts - 307
2025-07-27 12:52:08,129 - main - INFO - Response: GET http://localhost:8000/api/products - 307
2025-07-27 12:52:08,262 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 12:52:08,491 - sqlalchemy.engine.Engine - INFO - SELECT farmers.email, farmers.phone, farmers.name, farmers.country, farmers.is_active, farmers.is_verified, farmers.id, farmers.user_id, farmers.farm_size, farmers.crop_types, farmers.experience_years, farmers.location, farmers.bio, farmers.rating, farmers.total_orders 
FROM farmers 
WHERE farmers.is_active = 1
2025-07-27 12:52:08,567 - sqlalchemy.engine.Engine - INFO - [generated in 0.07669s] ()
2025-07-27 12:52:08,610 - main - INFO - Request: GET http://localhost:8000/api/products/?category=Seeds
2025-07-27 12:52:08,631 - main - INFO - Request: GET http://localhost:8000/api/dealers/
2025-07-27 12:52:08,644 - main - INFO - Request: GET http://localhost:8000/api/experts/
2025-07-27 12:52:08,647 - main - INFO - Request: GET http://localhost:8000/api/products/
2025-07-27 12:52:08,733 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-07-27 12:52:08,746 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 12:52:08,760 - sqlalchemy.engine.Engine - INFO - SELECT products.id, products.name, products.description, products.category, products.price, products.dealer_id, products.stock_quantity, products.image_url, products.rating, products.created_at 
FROM products 
WHERE products.category = ?
2025-07-27 12:52:08,764 - sqlalchemy.engine.Engine - INFO - [generated in 0.00439s] ('SEEDS',)
2025-07-27 12:52:08,783 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 12:52:08,796 - sqlalchemy.engine.Engine - INFO - SELECT dealers.email, dealers.phone, dealers.name, dealers.country, dealers.is_active, dealers.is_verified, dealers.id, dealers.user_id, dealers.company_name, dealers.business_type, dealers.products_offered, dealers.rating, dealers.total_sales 
FROM dealers 
WHERE dealers.is_active = 1
2025-07-27 12:52:08,816 - sqlalchemy.engine.Engine - INFO - [generated in 0.02017s] ()
2025-07-27 12:52:08,833 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 12:52:08,853 - sqlalchemy.engine.Engine - INFO - SELECT experts.email, experts.phone, experts.name, experts.country, experts.is_active, experts.is_verified, experts.id, experts.user_id, experts.specialization, experts.qualification, experts.experience_years, experts.consultation_fee, experts.rating, experts.total_consultations 
FROM experts 
WHERE experts.is_active = 1
2025-07-27 12:52:08,896 - sqlalchemy.engine.Engine - INFO - [generated in 0.04287s] ()
2025-07-27 12:52:08,911 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 12:52:08,916 - sqlalchemy.engine.Engine - INFO - SELECT products.id, products.name, products.description, products.category, products.price, products.dealer_id, products.stock_quantity, products.image_url, products.rating, products.created_at 
FROM products
2025-07-27 12:52:08,947 - sqlalchemy.engine.Engine - INFO - [generated in 0.03058s] ()
2025-07-27 12:52:08,961 - main - ERROR - Unhandled Exception: (sqlite3.OperationalError) no such column: farmers.email
[SQL: SELECT farmers.email, farmers.phone, farmers.name, farmers.country, farmers.is_active, farmers.is_verified, farmers.id, farmers.user_id, farmers.farm_size, farmers.crop_types, farmers.experience_years, farmers.location, farmers.bio, farmers.rating, farmers.total_orders 
FROM farmers 
WHERE farmers.is_active = 1]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 149, in execute
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 300, in _handle_exception
    raise error
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 131, in execute
    self.await_(_cursor.execute(operation, parameters))
    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 40, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 32, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 105, in run
    result = function()
sqlite3.OperationalError: no such column: farmers.email

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\errors.py", line 164, in __call__
    await self.app(scope, receive, _send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 182, in __call__
    with recv_stream, send_stream, collapse_excgroups():
                                   ~~~~~~~~~~~~~~~~~~^^
  File "C:\ProgramData\miniconda3\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_utils.py", line 83, in collapse_excgroups
    raise exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 184, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\main.py", line 135, in log_requests
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 159, in call_next
    raise app_exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 144, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\cors.py", line 93, in __call__
    await self.simple_response(scope, receive, send, request_headers=headers)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\cors.py", line 144, in simple_response
    await self.app(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\trustedhost.py", line 36, in __call__
    await self.app(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\exceptions.py", line 63, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 716, in __call__
    await self.middleware_stack(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 736, in app
    await route.handle(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 290, in handle
    await self.app(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 78, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 75, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\fastapi\routing.py", line 302, in app
    raw_response = await run_endpoint_function(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\fastapi\routing.py", line 213, in run_endpoint_function
    return await dependant.call(**values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\api\farmers.py", line 13, in get_farmers
    result = await session.execute(
             ^^^^^^^^^^^^^^^^^^^^^^
        select(Farmer).where(Farmer.is_active == True)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 463, in execute
    result = await greenlet_spawn(
             ^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 201, in greenlet_spawn
    result = context.throw(*sys.exc_info())
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2251, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self,
        ^^^^^
    ...<4 lines>...
        conn,
        ^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\orm\context.py", line 306, in orm_execute_statement
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 149, in execute
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 300, in _handle_exception
    raise error
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 131, in execute
    self.await_(_cursor.execute(operation, parameters))
    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 40, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 32, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 105, in run
    result = function()
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: farmers.email
[SQL: SELECT farmers.email, farmers.phone, farmers.name, farmers.country, farmers.is_active, farmers.is_verified, farmers.id, farmers.user_id, farmers.farm_size, farmers.crop_types, farmers.experience_years, farmers.location, farmers.bio, farmers.rating, farmers.total_orders 
FROM farmers 
WHERE farmers.is_active = 1]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-27 12:52:09,944 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-07-27 12:52:10,025 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-07-27 12:52:10,082 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-07-27 12:52:10,096 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-07-27 12:52:10,125 - main - ERROR - Unhandled Exception: (sqlite3.OperationalError) no such column: experts.email
[SQL: SELECT experts.email, experts.phone, experts.name, experts.country, experts.is_active, experts.is_verified, experts.id, experts.user_id, experts.specialization, experts.qualification, experts.experience_years, experts.consultation_fee, experts.rating, experts.total_consultations 
FROM experts 
WHERE experts.is_active = 1]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 149, in execute
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 300, in _handle_exception
    raise error
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 131, in execute
    self.await_(_cursor.execute(operation, parameters))
    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 40, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 32, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 105, in run
    result = function()
sqlite3.OperationalError: no such column: experts.email

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\errors.py", line 164, in __call__
    await self.app(scope, receive, _send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 182, in __call__
    with recv_stream, send_stream, collapse_excgroups():
                                   ~~~~~~~~~~~~~~~~~~^^
  File "C:\ProgramData\miniconda3\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_utils.py", line 83, in collapse_excgroups
    raise exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 184, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\main.py", line 135, in log_requests
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 159, in call_next
    raise app_exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 144, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\cors.py", line 93, in __call__
    await self.simple_response(scope, receive, send, request_headers=headers)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\cors.py", line 144, in simple_response
    await self.app(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\trustedhost.py", line 36, in __call__
    await self.app(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\exceptions.py", line 63, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 716, in __call__
    await self.middleware_stack(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 736, in app
    await route.handle(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 290, in handle
    await self.app(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 78, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 75, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\fastapi\routing.py", line 302, in app
    raw_response = await run_endpoint_function(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\fastapi\routing.py", line 213, in run_endpoint_function
    return await dependant.call(**values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\api\experts.py", line 13, in get_experts
    result = await session.execute(
             ^^^^^^^^^^^^^^^^^^^^^^
        select(Expert).where(Expert.is_active == True)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 463, in execute
    result = await greenlet_spawn(
             ^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 201, in greenlet_spawn
    result = context.throw(*sys.exc_info())
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2251, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self,
        ^^^^^
    ...<4 lines>...
        conn,
        ^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\orm\context.py", line 306, in orm_execute_statement
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 149, in execute
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 300, in _handle_exception
    raise error
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 131, in execute
    self.await_(_cursor.execute(operation, parameters))
    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 40, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 32, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 105, in run
    result = function()
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: experts.email
[SQL: SELECT experts.email, experts.phone, experts.name, experts.country, experts.is_active, experts.is_verified, experts.id, experts.user_id, experts.specialization, experts.qualification, experts.experience_years, experts.consultation_fee, experts.rating, experts.total_consultations 
FROM experts 
WHERE experts.is_active = 1]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-27 12:52:10,477 - main - ERROR - Unhandled Exception: (sqlite3.OperationalError) no such column: dealers.email
[SQL: SELECT dealers.email, dealers.phone, dealers.name, dealers.country, dealers.is_active, dealers.is_verified, dealers.id, dealers.user_id, dealers.company_name, dealers.business_type, dealers.products_offered, dealers.rating, dealers.total_sales 
FROM dealers 
WHERE dealers.is_active = 1]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 149, in execute
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 300, in _handle_exception
    raise error
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 131, in execute
    self.await_(_cursor.execute(operation, parameters))
    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 40, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 32, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 105, in run
    result = function()
sqlite3.OperationalError: no such column: dealers.email

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\errors.py", line 164, in __call__
    await self.app(scope, receive, _send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 182, in __call__
    with recv_stream, send_stream, collapse_excgroups():
                                   ~~~~~~~~~~~~~~~~~~^^
  File "C:\ProgramData\miniconda3\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_utils.py", line 83, in collapse_excgroups
    raise exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 184, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\main.py", line 135, in log_requests
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 159, in call_next
    raise app_exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 144, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\cors.py", line 93, in __call__
    await self.simple_response(scope, receive, send, request_headers=headers)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\cors.py", line 144, in simple_response
    await self.app(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\trustedhost.py", line 36, in __call__
    await self.app(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\exceptions.py", line 63, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 716, in __call__
    await self.middleware_stack(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 736, in app
    await route.handle(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 290, in handle
    await self.app(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 78, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 75, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\fastapi\routing.py", line 302, in app
    raw_response = await run_endpoint_function(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\fastapi\routing.py", line 213, in run_endpoint_function
    return await dependant.call(**values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\api\dealers.py", line 12, in get_dealers
    result = await session.execute(
             ^^^^^^^^^^^^^^^^^^^^^^
        select(Dealer).where(Dealer.is_active == True)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 463, in execute
    result = await greenlet_spawn(
             ^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 201, in greenlet_spawn
    result = context.throw(*sys.exc_info())
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2251, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self,
        ^^^^^
    ...<4 lines>...
        conn,
        ^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\orm\context.py", line 306, in orm_execute_statement
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 149, in execute
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 300, in _handle_exception
    raise error
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 131, in execute
    self.await_(_cursor.execute(operation, parameters))
    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 40, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 32, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 105, in run
    result = function()
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: dealers.email
[SQL: SELECT dealers.email, dealers.phone, dealers.name, dealers.country, dealers.is_active, dealers.is_verified, dealers.id, dealers.user_id, dealers.company_name, dealers.business_type, dealers.products_offered, dealers.rating, dealers.total_sales 
FROM dealers 
WHERE dealers.is_active = 1]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-27 12:52:10,828 - main - INFO - Response: GET http://localhost:8000/api/products/ - 200
2025-07-27 12:52:10,869 - main - INFO - Response: GET http://localhost:8000/api/products/?category=Seeds - 200
2025-07-27 12:53:15,086 - main - INFO - Shutting down SLAM Robotics Agriculture Platform API...
2025-07-27 12:56:03,237 - main - INFO - Starting SLAM Robotics Agriculture Platform API...
2025-07-27 12:56:03,241 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 12:56:03,241 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-07-27 12:56:03,241 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:56:03,243 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("farmers")
2025-07-27 12:56:03,244 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:56:03,246 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("experts")
2025-07-27 12:56:03,247 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:56:03,249 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("dealers")
2025-07-27 12:56:03,250 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:56:03,252 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("products")
2025-07-27 12:56:03,253 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:56:03,255 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("orders")
2025-07-27 12:56:03,256 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:56:03,259 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("appointments")
2025-07-27 12:56:03,265 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:56:03,267 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("reviews")
2025-07-27 12:56:03,268 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:56:03,271 - sqlalchemy.engine.Engine - INFO - SELECT name FROM sqlite_master WHERE type='table'
2025-07-27 12:56:03,272 - sqlalchemy.engine.Engine - INFO - [generated in 0.00103s] ()
2025-07-27 12:56:03,274 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-07-27 12:56:03,276 - main - INFO - Database initialized successfully
2025-07-27 12:56:09,230 - main - INFO - Request: GET http://localhost:8000/health
2025-07-27 12:56:09,231 - main - INFO - Response: GET http://localhost:8000/health - 200
2025-07-27 12:56:33,029 - main - INFO - Request: GET http://localhost:8000/api/farmers
2025-07-27 12:56:33,032 - main - INFO - Response: GET http://localhost:8000/api/farmers - 307
2025-07-27 12:56:33,039 - main - INFO - Request: GET http://localhost:8000/api/farmers/
2025-07-27 12:56:33,041 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 12:56:33,078 - sqlalchemy.engine.Engine - INFO - SELECT farmers.email, farmers.phone, farmers.name, farmers.country, farmers.is_active, farmers.is_verified, farmers.id, farmers.user_id, farmers.farm_size, farmers.crop_types, farmers.experience_years, farmers.location, farmers.bio, farmers.rating, farmers.total_orders 
FROM farmers 
WHERE farmers.is_active = 1
2025-07-27 12:56:33,093 - sqlalchemy.engine.Engine - INFO - [generated in 0.01579s] ()
2025-07-27 12:56:33,111 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-07-27 12:56:33,155 - main - ERROR - Unhandled Exception: (sqlite3.OperationalError) no such column: farmers.email
[SQL: SELECT farmers.email, farmers.phone, farmers.name, farmers.country, farmers.is_active, farmers.is_verified, farmers.id, farmers.user_id, farmers.farm_size, farmers.crop_types, farmers.experience_years, farmers.location, farmers.bio, farmers.rating, farmers.total_orders 
FROM farmers 
WHERE farmers.is_active = 1]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 149, in execute
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 300, in _handle_exception
    raise error
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 131, in execute
    self.await_(_cursor.execute(operation, parameters))
    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 40, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 32, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 105, in run
    result = function()
sqlite3.OperationalError: no such column: farmers.email

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\errors.py", line 164, in __call__
    await self.app(scope, receive, _send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 182, in __call__
    with recv_stream, send_stream, collapse_excgroups():
                                   ~~~~~~~~~~~~~~~~~~^^
  File "C:\ProgramData\miniconda3\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_utils.py", line 83, in collapse_excgroups
    raise exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 184, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\main.py", line 135, in log_requests
    response = await call_next(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 159, in call_next
    raise app_exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\base.py", line 144, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\cors.py", line 85, in __call__
    await self.app(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\trustedhost.py", line 36, in __call__
    await self.app(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\middleware\exceptions.py", line 63, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 716, in __call__
    await self.middleware_stack(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 736, in app
    await route.handle(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 290, in handle
    await self.app(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 78, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "D:\slam-website\backend\venv\Lib\site-packages\starlette\routing.py", line 75, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\fastapi\routing.py", line 302, in app
    raw_response = await run_endpoint_function(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\fastapi\routing.py", line 213, in run_endpoint_function
    return await dependant.call(**values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\api\farmers.py", line 13, in get_farmers
    result = await session.execute(
             ^^^^^^^^^^^^^^^^^^^^^^
        select(Farmer).where(Farmer.is_active == True)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 463, in execute
    result = await greenlet_spawn(
             ^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 201, in greenlet_spawn
    result = context.throw(*sys.exc_info())
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2251, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self,
        ^^^^^
    ...<4 lines>...
        conn,
        ^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\orm\context.py", line 306, in orm_execute_statement
    result = conn.execute(
        statement, params or {}, execution_options=execution_options
    )
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 149, in execute
    self._adapt_connection._handle_exception(error)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 300, in _handle_exception
    raise error
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 131, in execute
    self.await_(_cursor.execute(operation, parameters))
    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 40, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\cursor.py", line 32, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 122, in _execute
    return await future
           ^^^^^^^^^^^^
  File "D:\slam-website\backend\venv\Lib\site-packages\aiosqlite\core.py", line 105, in run
    result = function()
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such column: farmers.email
[SQL: SELECT farmers.email, farmers.phone, farmers.name, farmers.country, farmers.is_active, farmers.is_verified, farmers.id, farmers.user_id, farmers.farm_size, farmers.crop_types, farmers.experience_years, farmers.location, farmers.bio, farmers.rating, farmers.total_orders 
FROM farmers 
WHERE farmers.is_active = 1]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-07-27 12:59:15,329 - main - INFO - Starting SLAM Robotics Agriculture Platform API...
2025-07-27 12:59:15,335 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 12:59:15,336 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("users")
2025-07-27 12:59:15,337 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:59:15,344 - sqlalchemy.engine.Engine - INFO - PRAGMA temp.table_info("users")
2025-07-27 12:59:15,347 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:59:15,350 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("farmers")
2025-07-27 12:59:15,351 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:59:15,353 - sqlalchemy.engine.Engine - INFO - PRAGMA temp.table_info("farmers")
2025-07-27 12:59:15,354 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:59:15,358 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("experts")
2025-07-27 12:59:15,359 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:59:15,361 - sqlalchemy.engine.Engine - INFO - PRAGMA temp.table_info("experts")
2025-07-27 12:59:15,362 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:59:15,365 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("dealers")
2025-07-27 12:59:15,373 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:59:15,376 - sqlalchemy.engine.Engine - INFO - PRAGMA temp.table_info("dealers")
2025-07-27 12:59:15,377 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:59:15,388 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("products")
2025-07-27 12:59:15,391 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:59:15,393 - sqlalchemy.engine.Engine - INFO - PRAGMA temp.table_info("products")
2025-07-27 12:59:15,395 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:59:15,397 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("orders")
2025-07-27 12:59:15,399 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:59:15,403 - sqlalchemy.engine.Engine - INFO - PRAGMA temp.table_info("orders")
2025-07-27 12:59:15,408 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:59:15,411 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("appointments")
2025-07-27 12:59:15,412 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:59:15,415 - sqlalchemy.engine.Engine - INFO - PRAGMA temp.table_info("appointments")
2025-07-27 12:59:15,419 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:59:15,433 - sqlalchemy.engine.Engine - INFO - PRAGMA main.table_info("reviews")
2025-07-27 12:59:15,434 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:59:15,436 - sqlalchemy.engine.Engine - INFO - PRAGMA temp.table_info("reviews")
2025-07-27 12:59:15,437 - sqlalchemy.engine.Engine - INFO - [raw sql] ()
2025-07-27 12:59:15,446 - sqlalchemy.engine.Engine - INFO - 
CREATE TABLE users (
	email VARCHAR NOT NULL, 
	phone VARCHAR(15) NOT NULL, 
	name VARCHAR(100) NOT NULL, 
	country VARCHAR NOT NULL, 
	is_active BOOLEAN NOT NULL, 
	is_verified BOOLEAN NOT NULL, 
	id INTEGER NOT NULL, 
	hashed_password VARCHAR NOT NULL, 
	role VARCHAR(6) NOT NULL, 
	status VARCHAR NOT NULL, 
	created_at DATETIME NOT NULL, 
	updated_at DATETIME NOT NULL, 
	PRIMARY KEY (id)
)


2025-07-27 12:59:15,452 - sqlalchemy.engine.Engine - INFO - [no key 0.00517s] ()
2025-07-27 12:59:15,491 - sqlalchemy.engine.Engine - INFO - CREATE UNIQUE INDEX ix_users_email ON users (email)
2025-07-27 12:59:15,498 - sqlalchemy.engine.Engine - INFO - [no key 0.00708s] ()
2025-07-27 12:59:15,520 - sqlalchemy.engine.Engine - INFO - 
CREATE TABLE farmers (
	email VARCHAR NOT NULL, 
	phone VARCHAR(15) NOT NULL, 
	name VARCHAR(100) NOT NULL, 
	country VARCHAR NOT NULL, 
	is_active BOOLEAN NOT NULL, 
	is_verified BOOLEAN NOT NULL, 
	id INTEGER NOT NULL, 
	user_id INTEGER NOT NULL, 
	farm_size FLOAT, 
	crop_types VARCHAR, 
	experience_years INTEGER, 
	location VARCHAR, 
	bio VARCHAR, 
	rating FLOAT, 
	total_orders INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-07-27 12:59:15,570 - sqlalchemy.engine.Engine - INFO - [no key 0.04995s] ()
2025-07-27 12:59:15,592 - sqlalchemy.engine.Engine - INFO - CREATE UNIQUE INDEX ix_farmers_email ON farmers (email)
2025-07-27 12:59:15,593 - sqlalchemy.engine.Engine - INFO - [no key 0.00145s] ()
2025-07-27 12:59:15,613 - sqlalchemy.engine.Engine - INFO - 
CREATE TABLE experts (
	email VARCHAR NOT NULL, 
	phone VARCHAR(15) NOT NULL, 
	name VARCHAR(100) NOT NULL, 
	country VARCHAR NOT NULL, 
	is_active BOOLEAN NOT NULL, 
	is_verified BOOLEAN NOT NULL, 
	id INTEGER NOT NULL, 
	user_id INTEGER NOT NULL, 
	specialization VARCHAR NOT NULL, 
	qualification VARCHAR NOT NULL, 
	experience_years INTEGER NOT NULL, 
	consultation_fee FLOAT NOT NULL, 
	rating FLOAT, 
	total_consultations INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-07-27 12:59:15,635 - sqlalchemy.engine.Engine - INFO - [no key 0.02242s] ()
2025-07-27 12:59:15,659 - sqlalchemy.engine.Engine - INFO - CREATE UNIQUE INDEX ix_experts_email ON experts (email)
2025-07-27 12:59:15,661 - sqlalchemy.engine.Engine - INFO - [no key 0.00196s] ()
2025-07-27 12:59:15,679 - sqlalchemy.engine.Engine - INFO - 
CREATE TABLE dealers (
	email VARCHAR NOT NULL, 
	phone VARCHAR(15) NOT NULL, 
	name VARCHAR(100) NOT NULL, 
	country VARCHAR NOT NULL, 
	is_active BOOLEAN NOT NULL, 
	is_verified BOOLEAN NOT NULL, 
	id INTEGER NOT NULL, 
	user_id INTEGER NOT NULL, 
	company_name VARCHAR NOT NULL, 
	business_type VARCHAR NOT NULL, 
	products_offered VARCHAR, 
	rating FLOAT, 
	total_sales INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(user_id) REFERENCES users (id)
)


2025-07-27 12:59:15,696 - sqlalchemy.engine.Engine - INFO - [no key 0.01654s] ()
2025-07-27 12:59:15,712 - sqlalchemy.engine.Engine - INFO - CREATE UNIQUE INDEX ix_dealers_email ON dealers (email)
2025-07-27 12:59:15,714 - sqlalchemy.engine.Engine - INFO - [no key 0.00156s] ()
2025-07-27 12:59:15,737 - sqlalchemy.engine.Engine - INFO - 
CREATE TABLE reviews (
	id INTEGER NOT NULL, 
	reviewer_id INTEGER NOT NULL, 
	reviewed_id INTEGER NOT NULL, 
	rating INTEGER NOT NULL, 
	comment VARCHAR, 
	created_at DATETIME NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(reviewer_id) REFERENCES users (id), 
	FOREIGN KEY(reviewed_id) REFERENCES users (id)
)


2025-07-27 12:59:15,753 - sqlalchemy.engine.Engine - INFO - [no key 0.01537s] ()
2025-07-27 12:59:15,773 - sqlalchemy.engine.Engine - INFO - 
CREATE TABLE products (
	id INTEGER NOT NULL, 
	name VARCHAR NOT NULL, 
	description VARCHAR NOT NULL, 
	category VARCHAR(11) NOT NULL, 
	price FLOAT NOT NULL, 
	dealer_id INTEGER NOT NULL, 
	stock_quantity INTEGER NOT NULL, 
	image_url VARCHAR, 
	rating FLOAT, 
	created_at DATETIME NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(dealer_id) REFERENCES dealers (id)
)


2025-07-27 12:59:15,784 - sqlalchemy.engine.Engine - INFO - [no key 0.01028s] ()
2025-07-27 12:59:15,803 - sqlalchemy.engine.Engine - INFO - 
CREATE TABLE appointments (
	id INTEGER NOT NULL, 
	farmer_id INTEGER NOT NULL, 
	expert_id INTEGER NOT NULL, 
	service_type VARCHAR NOT NULL, 
	preferred_date DATETIME NOT NULL, 
	notes VARCHAR, 
	status VARCHAR(9) NOT NULL, 
	created_at DATETIME NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(farmer_id) REFERENCES farmers (id), 
	FOREIGN KEY(expert_id) REFERENCES experts (id)
)


2025-07-27 12:59:15,816 - sqlalchemy.engine.Engine - INFO - [no key 0.01257s] ()
2025-07-27 12:59:15,870 - sqlalchemy.engine.Engine - INFO - 
CREATE TABLE orders (
	id INTEGER NOT NULL, 
	farmer_id INTEGER NOT NULL, 
	product_id INTEGER NOT NULL, 
	quantity INTEGER NOT NULL, 
	total_amount FLOAT NOT NULL, 
	status VARCHAR(9) NOT NULL, 
	delivery_address VARCHAR NOT NULL, 
	delivery_date DATETIME, 
	created_at DATETIME NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(farmer_id) REFERENCES farmers (id), 
	FOREIGN KEY(product_id) REFERENCES products (id)
)


2025-07-27 12:59:15,883 - sqlalchemy.engine.Engine - INFO - [no key 0.01381s] ()
2025-07-27 12:59:15,901 - sqlalchemy.engine.Engine - INFO - SELECT name FROM sqlite_master WHERE type='table'
2025-07-27 12:59:15,910 - sqlalchemy.engine.Engine - INFO - [generated in 0.00879s] ()
2025-07-27 12:59:15,917 - sqlalchemy.engine.Engine - INFO - COMMIT
2025-07-27 12:59:15,919 - main - INFO - Database initialized successfully
2025-07-27 12:59:18,860 - main - INFO - Request: GET http://localhost:8000/health
2025-07-27 12:59:18,862 - main - INFO - Response: GET http://localhost:8000/health - 200
2025-07-27 12:59:25,691 - main - INFO - Request: GET http://localhost:8000/api/farmers
2025-07-27 12:59:25,692 - main - INFO - Response: GET http://localhost:8000/api/farmers - 307
2025-07-27 12:59:25,695 - main - INFO - Request: GET http://localhost:8000/api/farmers/
2025-07-27 12:59:25,696 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 12:59:25,708 - sqlalchemy.engine.Engine - INFO - SELECT farmers.email, farmers.phone, farmers.name, farmers.country, farmers.is_active, farmers.is_verified, farmers.id, farmers.user_id, farmers.farm_size, farmers.crop_types, farmers.experience_years, farmers.location, farmers.bio, farmers.rating, farmers.total_orders 
FROM farmers 
WHERE farmers.is_active = 1
2025-07-27 12:59:25,710 - sqlalchemy.engine.Engine - INFO - [generated in 0.00201s] ()
2025-07-27 12:59:25,713 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-07-27 12:59:25,714 - main - INFO - Response: GET http://localhost:8000/api/farmers/ - 200
2025-07-27 13:00:08,320 - main - INFO - Request: GET http://localhost:8000/api/experts
2025-07-27 13:00:08,321 - main - INFO - Response: GET http://localhost:8000/api/experts - 307
2025-07-27 13:00:08,323 - main - INFO - Request: GET http://localhost:8000/api/experts/
2025-07-27 13:00:08,324 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 13:00:08,328 - sqlalchemy.engine.Engine - INFO - SELECT experts.email, experts.phone, experts.name, experts.country, experts.is_active, experts.is_verified, experts.id, experts.user_id, experts.specialization, experts.qualification, experts.experience_years, experts.consultation_fee, experts.rating, experts.total_consultations 
FROM experts 
WHERE experts.is_active = 1
2025-07-27 13:00:08,330 - sqlalchemy.engine.Engine - INFO - [generated in 0.00236s] ()
2025-07-27 13:00:08,333 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-07-27 13:00:08,334 - main - INFO - Response: GET http://localhost:8000/api/experts/ - 200
2025-07-27 13:00:26,510 - main - INFO - Request: GET http://localhost:8000/api/products
2025-07-27 13:00:26,511 - main - INFO - Response: GET http://localhost:8000/api/products - 307
2025-07-27 13:00:26,514 - main - INFO - Request: GET http://localhost:8000/api/products/
2025-07-27 13:00:26,515 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 13:00:26,520 - sqlalchemy.engine.Engine - INFO - SELECT products.id, products.name, products.description, products.category, products.price, products.dealer_id, products.stock_quantity, products.image_url, products.rating, products.created_at 
FROM products
2025-07-27 13:00:26,526 - sqlalchemy.engine.Engine - INFO - [generated in 0.00656s] ()
2025-07-27 13:00:26,529 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-07-27 13:00:26,531 - main - INFO - Response: GET http://localhost:8000/api/products/ - 200
2025-07-27 13:00:36,188 - main - INFO - Request: GET http://localhost:8000/api/products?category=Seeds
2025-07-27 13:00:36,189 - main - INFO - Response: GET http://localhost:8000/api/products?category=Seeds - 307
2025-07-27 13:00:36,191 - main - INFO - Request: GET http://localhost:8000/api/products/?category=Seeds
2025-07-27 13:00:36,193 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 13:00:36,194 - sqlalchemy.engine.Engine - INFO - SELECT products.id, products.name, products.description, products.category, products.price, products.dealer_id, products.stock_quantity, products.image_url, products.rating, products.created_at 
FROM products 
WHERE products.category = ?
2025-07-27 13:00:36,196 - sqlalchemy.engine.Engine - INFO - [generated in 0.00192s] ('SEEDS',)
2025-07-27 13:00:36,199 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-07-27 13:00:36,200 - main - INFO - Response: GET http://localhost:8000/api/products/?category=Seeds - 200
2025-07-27 13:01:10,786 - main - INFO - Request: GET http://localhost:8000/api/farmers
2025-07-27 13:01:10,798 - main - INFO - Response: GET http://localhost:8000/api/farmers - 307
2025-07-27 13:01:10,808 - main - INFO - Request: GET http://localhost:8000/api/experts
2025-07-27 13:01:10,821 - main - INFO - Request: GET http://localhost:8000/api/products
2025-07-27 13:01:10,823 - main - INFO - Response: GET http://localhost:8000/api/experts - 307
2025-07-27 13:01:10,837 - main - INFO - Response: GET http://localhost:8000/api/products - 307
2025-07-27 13:01:10,893 - main - INFO - Request: GET http://localhost:8000/api/dealers
2025-07-27 13:01:10,897 - main - INFO - Request: GET http://localhost:8000/api/products?category=Seeds
2025-07-27 13:01:10,901 - main - INFO - Request: GET http://localhost:8000/api/farmers/
2025-07-27 13:01:10,905 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 13:01:10,909 - sqlalchemy.engine.Engine - INFO - SELECT farmers.email, farmers.phone, farmers.name, farmers.country, farmers.is_active, farmers.is_verified, farmers.id, farmers.user_id, farmers.farm_size, farmers.crop_types, farmers.experience_years, farmers.location, farmers.bio, farmers.rating, farmers.total_orders 
FROM farmers 
WHERE farmers.is_active = 1
2025-07-27 13:01:10,919 - sqlalchemy.engine.Engine - INFO - [cached since 105.2s ago] ()
2025-07-27 13:01:10,920 - main - INFO - Request: GET http://localhost:8000/api/experts/
2025-07-27 13:01:10,922 - main - INFO - Response: GET http://localhost:8000/api/dealers - 307
2025-07-27 13:01:11,195 - main - INFO - Response: GET http://localhost:8000/api/products?category=Seeds - 307
2025-07-27 13:01:11,239 - main - INFO - Request: GET http://localhost:8000/api/dealers/
2025-07-27 13:01:11,241 - main - INFO - Request: GET http://localhost:8000/api/products/
2025-07-27 13:01:11,417 - main - INFO - Request: GET http://localhost:8000/api/products/?category=Seeds
2025-07-27 13:01:11,811 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 13:01:12,006 - sqlalchemy.engine.Engine - INFO - SELECT experts.email, experts.phone, experts.name, experts.country, experts.is_active, experts.is_verified, experts.id, experts.user_id, experts.specialization, experts.qualification, experts.experience_years, experts.consultation_fee, experts.rating, experts.total_consultations 
FROM experts 
WHERE experts.is_active = 1
2025-07-27 13:01:12,075 - sqlalchemy.engine.Engine - INFO - [cached since 63.75s ago] ()
2025-07-27 13:01:12,131 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 13:01:12,156 - sqlalchemy.engine.Engine - INFO - SELECT dealers.email, dealers.phone, dealers.name, dealers.country, dealers.is_active, dealers.is_verified, dealers.id, dealers.user_id, dealers.company_name, dealers.business_type, dealers.products_offered, dealers.rating, dealers.total_sales 
FROM dealers 
WHERE dealers.is_active = 1
2025-07-27 13:01:12,175 - sqlalchemy.engine.Engine - INFO - [generated in 0.01825s] ()
2025-07-27 13:01:12,182 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-07-27 13:01:12,188 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 13:01:12,198 - sqlalchemy.engine.Engine - INFO - SELECT products.id, products.name, products.description, products.category, products.price, products.dealer_id, products.stock_quantity, products.image_url, products.rating, products.created_at 
FROM products
2025-07-27 13:01:12,218 - sqlalchemy.engine.Engine - INFO - [cached since 45.7s ago] ()
2025-07-27 13:01:12,228 - sqlalchemy.engine.Engine - INFO - BEGIN (implicit)
2025-07-27 13:01:12,230 - sqlalchemy.engine.Engine - INFO - SELECT products.id, products.name, products.description, products.category, products.price, products.dealer_id, products.stock_quantity, products.image_url, products.rating, products.created_at 
FROM products 
WHERE products.category = ?
2025-07-27 13:01:12,245 - sqlalchemy.engine.Engine - INFO - [cached since 36.05s ago] ('SEEDS',)
2025-07-27 13:01:12,247 - main - INFO - Response: GET http://localhost:8000/api/farmers/ - 200
2025-07-27 13:01:12,251 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-07-27 13:01:12,259 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-07-27 13:01:12,268 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-07-27 13:01:12,274 - main - INFO - Response: GET http://localhost:8000/api/experts/ - 200
2025-07-27 13:01:12,278 - sqlalchemy.engine.Engine - INFO - ROLLBACK
2025-07-27 13:01:12,283 - main - INFO - Response: GET http://localhost:8000/api/products/ - 200
2025-07-27 13:01:12,286 - main - INFO - Response: GET http://localhost:8000/api/dealers/ - 200
2025-07-27 13:01:12,290 - main - INFO - Response: GET http://localhost:8000/api/products/?category=Seeds - 200
2025-07-27 13:03:34,043 - main - INFO - Request: GET http://localhost:8000/api/users?status=pending
2025-07-27 13:03:34,048 - main - ERROR - HTTP Exception: 404 - Not Found
2025-07-27 13:03:34,050 - main - INFO - Response: GET http://localhost:8000/api/users?status=pending - 404
