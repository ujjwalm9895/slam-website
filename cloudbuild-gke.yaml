# GKE Deployment Cloud Build config for SLAM Robotics
# Deploys both frontend and backend to Google Kubernetes Engine

substitutions:
  _CLUSTER_NAME: "slam-cluster"   # GKE cluster name
  _ZONE: "us-central1-a"     # GKE cluster zone
  _REGION: "us-central1"     # Region
  _GMAIL_APP_PASSWORD: "rgeu ouzv ebeb borr"  # Your existing email password

steps:
  # Build Frontend Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/slam-frontend:$SHORT_SHA', '.' ]

  # Push Frontend Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', 'gcr.io/$PROJECT_ID/slam-frontend:$SHORT_SHA' ]

  # Build Backend Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/slam-backend:$SHORT_SHA', '-f', 'backend/Dockerfile', './backend' ]

  # Push Backend Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', 'gcr.io/$PROJECT_ID/slam-backend:$SHORT_SHA' ]

  # Create GKE cluster if it doesn't exist
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      [
        'container', 'clusters', 'create', '$_CLUSTER_NAME',
        '--zone', '$_ZONE',
        '--num-nodes', '2',
        '--min-nodes', '1',
        '--max-nodes', '5',
        '--enable-autoscaling',
        '--machine-type', 'e2-micro',
        '--disk-size', '20',
        '--enable-ip-alias',
        '--quiet'
      ]
    allowFailure: true

  # Get cluster credentials
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      [
        'container', 'clusters', 'get-credentials', '$_CLUSTER_NAME',
        '--zone', '$_ZONE',
        '--project', '$PROJECT_ID'
      ]

  # Create Kubernetes secrets
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      [
        'create', 'secret', 'generic', 'slam-secrets',
        '--from-literal=DATABASE_URL=sqlite:///./agri_platform.db',
        '--from-literal=SECRET_KEY=your-production-secret-key-change-this',
        '--from-literal=JWT_SECRET=your-jwt-secret-change-this',
        '--from-literal=CONTACT_EMAIL_PASS=$_GMAIL_APP_PASSWORD',
        '--dry-run=client', '-o=yaml'
      ]
    | kubectl apply -f -

  # Apply Kubernetes manifests
  - name: 'gcr.io/cloud-builders/kubectl'
    args: [ 'apply', '-f', 'gcp-deployment/kubernetes/' ]

  # Update deployments with new images
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      [
        'set', 'image',
        'deployment/slam-frontend',
        'slam-frontend=gcr.io/$PROJECT_ID/slam-frontend:$SHORT_SHA'
      ]

  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      [
        'set', 'image',
        'deployment/slam-backend',
        'slam-backend=gcr.io/$PROJECT_ID/slam-backend:$SHORT_SHA'
      ]

  # Wait for deployments to be ready
  - name: 'gcr.io/cloud-builders/kubectl'
    args: [ 'rollout', 'status', 'deployment/slam-frontend' ]

  - name: 'gcr.io/cloud-builders/kubectl'
    args: [ 'rollout', 'status', 'deployment/slam-backend' ]

images:
  - 'gcr.io/$PROJECT_ID/slam-frontend:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/slam-backend:$SHORT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_4' 